#include <Arduino_FreeRTOS.h>
#include <Servo.h>

Servo myservo;  // création de l'objet myservo 
int trig = 2;
int echo = 3;
long lecture_echo;
long cm;
int pin_servo = 6;       // Pin sur lequel est branché le servo
int pos = 0;             // variable permettant de conserver la position du servo
int angle_initial = 0;   //angle initial
int angle_final = 180;   //angle final
int increment = 2;       //incrément entre chaque position
void task_ultrasound();
void task_motor();
TaskHandle_t xTaskToSuspend;
void setup() {
  Serial.begin(9600);
  pinMode(trig, OUTPUT);
  digitalWrite(trig, LOW);
  pinMode(echo, INPUT);                       
  while(!Serial){;} 
  myservo.attach(pin_servo);  // attache le servo au pin spécifié sur l'objet myservo
  xTaskCreate(task_ultrasound,"Task 1",configMINIMAL_STACK_SIZE,NULL,1,NULL);
  xTaskCreate(task_motor,"Task 2",configMINIMAL_STACK_SIZE,NULL,1,&xTaskToSuspend);
  vTaskStartScheduler();
}

void loop() {
  
}

void task_ultrasound(){
  digitalWrite(trig, HIGH);
  delayMicroseconds(10);
  digitalWrite(trig, LOW);
  lecture_echo = pulseIn(echo,HIGH);
  cm = lecture_echo /58;
  Serial.print("Distance en cm :");
  Serial.println(cm);
  if(cm<7 && cm>1){
    vTaskResume(xTaskToSuspend );
  }else{
    vTaskSuspend(xTaskToSuspend );
    myservo.write(0);
  }
  vTaskDelay(1000/portTICK_PERIOD_MS);
}
void task_motor(){
  for (pos = angle_initial; pos <= angle_final; pos += increment) { // Déplace le servo de 0 à 180 degréespar pas de 2 degrée 
    myservo.write(pos);              // Demande au servo de se déplacer à cette position angulaire
    delay(5);                       // Attend 5ms entre chaque changement de position
    Serial.println(myservo.read());
  }
  for (pos = angle_final; pos >= angle_initial; pos -= increment) { // Fait le chemin inverse
    myservo.write(pos);              
    delay(5);   
        Serial.println(myservo.read());
  }
}
